slip14
1.
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Travel Plan Booking Form</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 20px;
    }

    form {
      max-width: 500px;
      margin: 0 auto;
      background-color: #fff;
      padding: 20px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    label {
      display: block;
      margin-bottom: 8px;
    }

    input[type="text"],
    input[type="tel"],
    select {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      box-sizing: border-box;
    }

    input[type="checkbox"] {
      margin-bottom: 10px;
    }

    input[type="submit"],
    input[type="reset"] {
      background-color: #4caf50;
      color: #fff;
      padding: 10px 15px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
    }

    input[type="submit"]:hover,
    input[type="reset"]:hover {
      background-color: #45a049;
    }
  </style>
</head>
<body>

  <form action="#" method="post">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required>

    <label for="address">Address:</label>
    <input type="text" id="address" name="address" required>

    <label for="contact">Contact Number:</label>
    <input type="tel" id="contact" name="contact" pattern="[0-9]{10}" required>
    
    <label>Gender:</label>
    <label for="male"><input type="radio" id="male" name="gender" value="male" required> Male</label>
    <label for="female"><input type="radio" id="female" name="gender" value="female" required> Female</label>

    <label>Preferred Season:</label>
    <label for="spring"><input type="checkbox" id="spring" name="season[]" value="spring"> Spring</label>
    <label for="summer"><input type="checkbox" id="summer" name="season[]" value="summer"> Summer</label>
    <label for="autumn"><input type="checkbox" id="autumn" name="season[]" value="autumn"> Autumn</label>
    <label for="winter"><input type="checkbox" id="winter" name="season[]" value="winter"> Winter</label>

    <label for="location">Location Type:</label>
    <select id="location" name="location" required>
      <option value="" disabled selected>Select Location Type</option>
      <option value="beach">Beach</option>
      <option value="mountain">Mountain</option>
      <option value="city">City</option>
      <option value="countryside">Countryside</option>
    </select>

    <input type="submit" value="Submit">
    <input type="reset" value="Reset">
  </form>

</body>
</html>

2. CREATE(:Government {name: 'Government'})
CREATE (:Scholarship {name: 'S1', category: 'OBC', year: '2020-2021', income_limit: 50000})
CREATE (:Scholarship {name: 'S2', category: 'General', year: '2020-2021', income_limit: 60000})
CREATE (:Student {name: 'C1', category: 'OBC', year_of_study: '2020-2021'})
CREATE (:Student {name: 'C2', category: 'General', year_of_study: '2020-2021'})
CREATE (:FamilyMember {name: 'F1'})

relationships:

1)MATCH(g:Government)
MATCH(s:Scholarship{name:'S1'})
CREATE(g)-[:PROVIDES]->(s)
2)MATCH(g:Government)
MATCH(s:Scholarship{name:'S2'})
CREATE(g)-[:PROVIDES]->(s)
3)MATCH(c:Student{name:'C1'})
MATCH(s:Scholarship{name:'S1'})
CREATE(c)-[:Can_Apply]->(s)
4)MATCH(c:Student{name:'C2'})
MATCH(s:Scholarship{name:'S2'})
CREATE(c)-[:Can_Apply]->(s)
5)MATCH(c:Student{name:'C1'})
MATCH(s:Scholarship{name:'S1'})
CREATE(c)-[:get_benifit]->(s)
6)MATCH(c:Student{name:'C2'})
MATCH(s:Scholarship{name:'S2'})
CREATE(c)-[:get_benifit]->(s)
7)MATCH(c:Student{name:'C1'})
MATCH(f:FamilyMember)
CREATE(c)-[:recommended]->(f)
QUERIES:
1)MATCH(s:Scholarship{category:'OBC'})
RETURN s.name
2)MATCH (c:Student)-[:get_benifit]->(s:Scholarship {name: 'S1', year: '2020-2021'})
RETURN COUNT(c) AS numberOfStudents
3)MATCH (s:Scholarship {name: 'S1'})
SET s.income_limit = 55000
RETURN s
and
MATCH (s:Scholarship {name: 'S2'})
SET s.income_limit = 75000
RETURN s
4)MATCH (s:Scholarship)
OPTIONAL MATCH (s:Student)-[:get_benifit]->(s)
WITH s, COUNT(s) AS numberOfStudents
ORDER BY numberOfStudents DESC
RETURN s.name, numberOfStudents
LIMIT 1
