Slip25
1. 
<!doctype html>
<html>
    <head>
        <title>Entry form</title>
        <style>
             .container{
        max-width:600px;
        margin:0 auto;
        padding:20px;
        background-color:skyblue;
        border-radius:5px;
       

    }
    h1{
        font-size: 24pt;
        
        text-align: center;
    }
        </style>
    </head>
    <body>
        
        <div class="container">
        <form>
            <h1>Entry Form </h1>
            <label for="name">Enter your name  </label>
            <input id="pname" name="pname" ><br>
            <label for="age">Age</label>
            <input type="integer" name="age"><br>
            <label for="Address">Address</label>
            <input type="textarea"><br>
            <label for="gender">Sex</label><br>
            <input type="radio" value="Male">Male</input><br>
            <input type="radio" value="Female">Female</input><br>
            <label for="Nationality"> Nationality </label>
            <select id="item" name="Nationality">
                <option value="Indian">Indian</option>
                <option value="American">American</option>
                <option value="Other">Other</option>
            
            </select><br>
            <label for="Language">language Known</label><br>
            <input type="checkbox" value="c">C</input><br>
            <input type="checkbox" value="c++">C++</input><br>
            <input type="checkbox" value="c#">C#</input><br>
            <input type="checkbox" value="Java">Java</input><br>
            <input type="checkbox" value="Other">Other</input><br>
            <label for="Password">Enter Your Password</label>
            <input type="text" name="Password"><br>
            <button type="button" class="button success">Submit</button>
        <button type="button" class="button primary">Reset</button>
    </form>
    </div>
</body>
</html>

2. CREATE (:Department {name: 'Physics'})
CREATE (:Department {name: 'Geography'})
CREATE (:Department {name: 'Computer'})
//Create Course
CREATE (:Course {name: 'Physics Course 1'})
CREATE (:Course {name: 'Physics Course 2'})
CREATE (:Course {name: 'Geography Course 1'})
CREATE (:Course {name: 'Computer Course 1'})
CREATE (:Course {name: 'Computer Course 2'})
//Relationships:
MATCH(d:Department{name:'Physics'})
MATCH(c:Course{name:'Physics Course 1'})
CREATE(d)-[:CONDUCTS]->(c)
MATCH(d:Department{name:'Physics'})
MATCH(c:Course{name:'Physics Course 2'})
CREATE(d)-[:CONDUCTS]->(c)
MATCH(d:Department{name:'Physics'})
MATCH(c:Course{name:'Computer Course 2'})
CREATE(d)-[:CONDUCTS]->(c)
MATCH(d:Department{name:'Geography'})
MATCH(c:Course{name:'Geography Course 1'})
CREATE(d)-[:CONDUCTS]->(c)

MATCH(d:Department{name:'Computer'})
MATCH(c:Course{name:'Computer Course 1'})
CREATE(d)-[:CONDUCTS]->(c)
MATCH(d:Department{name:'Computer'})
MATCH(c:Course{name:'Computer Course 2'})
CREATE(d)-[:CONDUCTS]->(c)
MATCH(p:Person{name:'P1'})
MATCH(c:Course{name: 'Physics Course 1'})
CREATE(p)-[:RECOMMENDS]->(c)
MATCH(p:Person{name:'P2'})
MATCH(c:Course{name: 'Physics Course 2'})
CREATE(p)-[:RECOMMENDS]->(c)
MATCH(p:Person{name:'P2'})
MATCH(c:Course{name: 'Computer Course 1'})
CREATE(p)-[:RECOMMENDS]->(c)
MATCH(p:Person{name:'P1'})
MATCH(c:Course{name: 'Geography Course 1'})
CREATE(p)-[:RECOMMENDS]->(c)
MATCH(p:Person{name:'P2'})
MATCH(c:Course{name: 'Geography Course 1'})
CREATE(p)-[:RECOMMENDS]->(c)
MATCH(p:Person{name:'P3'})
MATCH(c:Course{name: 'Geography Course 1'})
CREATE(p)-[:RECOMMENDS]->(c)

1.List the details of all the departments in the university. [3] 
=>MATCH (d:Department)
RETURN d;
2.List the names of the courses provided by Physics department. [3]
=>MATCH (d:Department {name: 'Physics'})-[:CONDUCTS]->(c:Course)
RETURN c.name;
ANS="Physics Course 2"
    "Physics Course 1"
3.List the most recommended course in Geography department. [4]
=>MATCH (d:Department {name: 'Geography'})-[:CONDUCTS]->(c:Course)<-[:RECOMMENDS]-(p:Person)
RETURN c.name, COUNT(p) AS recommendations
ORDER BY recommendations DESC
LIMIT 1;
ANS="Geography Course 1"	3
4.d. List the names of common courses across Mathematics and computer department.[4]
=>MATCH (p:Department {name: 'Physics'})-[:CONDUCTS]->(pCourse:Course)
MATCH (c:Department {name: 'Computer'})-[:CONDUCTS]->(cCourse:Course)
WHERE pCourse.name = cCourse.name
RETURN pCourse.name;
ANS="Computer Course 2"
